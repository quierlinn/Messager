// <auto-generated />
using Messager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Messager.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20250326203139_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "10.0.0-preview.2.25163.8");

            modelBuilder.Entity("Messager.Models.Message", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("receiverId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("senderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("receiverId");

                    b.HasIndex("senderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Messager.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Messager.Models.Message", b =>
                {
                    b.HasOne("Messager.Models.User", "receiver")
                        .WithMany()
                        .HasForeignKey("receiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Messager.Models.User", "sender")
                        .WithMany()
                        .HasForeignKey("senderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("receiver");

                    b.Navigation("sender");
                });
#pragma warning restore 612, 618
        }
    }
}
